--source include/have_router.inc

--let $extra_mrs_router_id=1
--source ../include/predefined_setup/configure_router_mrs_root.inc
--source ../include/schema/basic_schema.sql


--source ../include/mrs/start_object_definition.inc

# The test uses HOST to have only paths in HREF fields.
--let $mrs_add_service_path="/svc"
--let $mrs_add_host_name=""
--source ../include/mrs/service/add.inc

--let $mrs_add_schema=basic_schema
--let $mrs_add_schema_path=/basic
--source ../include/mrs/db_schema/add.inc

--let $mrs_add_db_object=table2
--let $mrs_add_db_object_path=/t2
#  --let $mrs_add_db_object_op=CREATE,READ,UPDATE,DELETE
--let $mrs_add_db_object_op=READ
--let $mrs_add_db_object_options='{"logging":{"exceptions":true, "request":{"headers":true, "body":true}, "response":{"headers":true, "body":true}}}'
--source ../include/mrs/db_object/add.inc

--source ../include/mrs/end_object_definition.inc

--let $mrs_host_and_port=127.0.0.1:$HTTP_SERVER_PORT
--let MRS_CLIENT_ARGS=$MRS_CLIENT --url https://$mrs_host_and_port


## Test starts here
--echo
--echo
--echo ## I. Verify basic access handling for READ and UPDATE when
--echo ##    db_object created with GET/READ permissions only.
--echo #
--echo # 1. Show that REST-GET/READ access is working
--echo # 2. Show that REST-POST/CREATE access doesn't work
--echo #
--echo ## II. Verify basic access handling for POST/CREATE when
--echo ##     db_object has been extended wtih POST/CREATE permissions.
--echo #
--echo # 1. Show that full-document, send in REST-POST/CREATE is returned with same data
#--echo # 2. Show that document without optionals fields, send in REST-POST/CREATE is retruned
#--echo #    with nulls in missing fields
#--echo # 3. Show that document without autogenerated fields, send in REST-POST/CREATE is returned
#--echo #    with those fields filled by MySQL (primary-key-auto-inc, date-with default value now)
--echo #
--echo ## III. Verify error-cases for REST-POST/CREATE access
--echo # 1. Set "allow_sorting" for field "id", and verify that MRS plugin displays
--echo #    the column in GET and POST request.
--echo #    Test case for a bug.
--echo # 2. POST document with non-registred field in `object_filed`, verfify returned error 400.


--echo
--echo #
--echo # I.1
--exec $MRS_CLIENT_ARGS --path /svc/basic/t2/1 --wait-until-status=60

--echo
--echo #
--echo # I.2
--let $mrs_client_arg_path='/svc/basic/t2'
--let $mrs_client_arg_expected_status=Forbidden
--let $mrs_client_arg_request_type='POST'
--let $mrs_client_arg_payload='{"id":1,"comment":"something-new"}'
--source ../include/mrs/mrs_client.inc


--echo
--echo #
--echo # II.1

--source ../include/mrs/changes/fetch_object.inc

--let $mrs_add_db_object_op=READ,CREATE
--source ../include/mrs/db_object/modify_op.inc

--source ../include/mrs/changes/wait_object.inc

--let $mrs_client_arg_path='/svc/basic/t2/'
--let $mrs_client_arg_request_type='POST'
--let $mrs_client_arg_payload='{"id":11,"comments":"something-new","date":"2017-1-1","name":"entry-with-all-fields"}'
--let $mrs_client_arg_json_schema_file=$SCHEMA_DIR/basic_table2_object.sch
--source ../include/mrs/mrs_client.inc

#--echo
#--echo #
#--echo # II.2
#
#--let $mrs_client_arg_path='/svc/basic/t2/'
#--let $mrs_client_arg_request_type='POST'
#--let $mrs_client_arg_payload='{"id":12,"name":"entry-without-comment","date":"2022-2-2"}'
#--let $mrs_client_arg_json_schema_file=$SCHEMA_DIR/basic_table2_object.sch
#--source ../include/mrs/mrs_client.inc


#--echo
#--echo #
#--echo # II.3
#
#--let $mrs_client_arg_path='/svc/basic/t2/'
#--let $mrs_client_arg_request_type='POST'
#--let $mrs_client_arg_payload='{"name":"entry-without-id-and-date"}'
#--let $mrs_client_arg_json_schema_file=$SCHEMA_DIR/basic_table2_object.sch
#--source ../include/mrs/mrs_client.inc


--echo
--echo #
--echo # III.1

UPDATE mysql_rest_service_metadata.object_field
   SET allow_sorting=1 WHERE name = "id";

--source ../include/mrs/changes/wait_object.inc

--let $mrs_client_arg_path='/svc/basic/t2/1'
--let $mrs_client_arg_request_type='GET'
--let $mrs_client_arg_json_schema_file=$SCHEMA_DIR/basic_table2_object.sch
--source ../include/mrs/mrs_client.inc

--let $mrs_client_arg_path='/svc/basic/t2'
--let $mrs_client_arg_request_type='POST'
--let $mrs_client_arg_json_schema_file=$SCHEMA_DIR/basic_table2_object.sch
--let $mrs_client_arg_payload='{"id":21,"name":"entry-after-allow-sort","date":"2022-2-2","comments":""}'
--source ../include/mrs/mrs_client.inc

--echo
--echo #
--echo # III.2

--let $mrs_client_arg_path='/svc/basic/t2'
--let $mrs_client_arg_request_type='POST'
--let $mrs_client_arg_expected_status=BadRequest
--let $mrs_client_arg_payload='{"id":22,"name":"entry-not-existing-filed","date":"2022-2-2","comments":"","non-existing-filed":1}'
--source ../include/mrs/mrs_client.inc

# Cleanup
--source ../include/mrs/cleanup.inc
