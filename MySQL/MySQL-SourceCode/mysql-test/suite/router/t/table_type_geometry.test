--source include/have_router.inc

--let $extra_mrs_router_id=1
--source ../include/predefined_setup/configure_router_mrs_root.inc

CREATE TABLE test.geo0(
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  g GEOMETRY SRID 0);

CREATE TABLE test.geo4326(
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  g GEOMETRY SRID 4326);


INSERT INTO test.geo0(g)
   VALUES(ST_GeomFromText('POINT(0 0)')),
         (ST_GeomFromText('LINESTRING(110 100, 20 30)')),
         (ST_GeomFromText('POLYGON((-110 100, 0 0, 0 100, -110 100))')),
         (NULL);

INSERT INTO test.geo4326(g)
   VALUES(ST_GeomFromText('POINT(0 0)',4326)),
         (ST_GeomFromText('POINT(90 89)',4326)),
         (ST_GeomFromText('POINT(80 0)',4326)),
         (ST_GeomFromText('POINT(-90 89)',4326)),
         (NULL);

--echo
--echo
--echo ## I. Verify JSON encoding of GEOMETRY type with SRID 0, returned in FEED response
--echo #
--echo # 1. Verify JSON response containing GeoJson fields generated from type GEOMETRY 
--echo #    returning single object.
--echo # 2. Verify JSON response containing GeoJson fields generated from types GEOMETRY
--echo #    returning multiple objects.
--echo # 3. Verify that object can be updated with different GeoJson and response
--echo #    contains same data.
#--echo # 4. Verify that object can be updated with different WKT-format and response
#--echo #    contains same data formated as GeoJson.
--echo # 4. Verify that objects can be filtered using GEOMETRY column using WKT-format data.
--echo # 5. Verify that objects can be filtered using GEOMETRY column using GeoJson data.
--echo #
--echo ## II. Verify JSON encoding of GEOMETRY types with SRID 4326, returned in FEED response
--echo #
--echo # 1. Verify JSON response containing GeoJson fields generated from type GEOMETRY
--echo #    returning single object.
--echo # 2. Verify JSON response containing GeoJson fields generated from type GEOMETRY,
--echo #    returning multiple objects.
--echo # 3. Verify that object can be updated with different GeoJson and response
--echo #    contains same data.
#--echo # 4. Verify that object can be updated with different WKT-format and response
#--echo #    contains same data formated as GeoJson.
--echo # 4. Verify that objects can be filtered using GEOMETRY column using WKT-format data.
--echo # 5. Verify that objects can be filtered using GEOMETRY column using GeoJson data.
--echo #
--echo #

--source ../include/mrs/start_object_definition.inc

# The test uses HOST to have only paths in HREF fields.
--let $mrs_add_service_path="/svc"
--let $mrs_add_host_name=""
--source ../include/mrs/service/add.inc

--let $mrs_add_schema=test
--let $mrs_add_schema_path=/test
--source ../include/mrs/db_schema/add.inc

--let $mrs_add_db_object=geo0
--let $mrs_add_db_object_path=/geo0
--source ../include/mrs/db_object/add.inc

--let $mrs_add_db_object=geo4326
--let $mrs_add_db_object_path=/geo4326
--source ../include/mrs/db_object/add.inc

--source ../include/mrs/end_object_definition.inc

--exec $MRS_CLIENT_ARGS --path /svc/test/geo0/1 --wait-until-status 60 --display none

--let $MRS_CLIENT_ARGS_LIST=$MRS_CLIENT_ARGS --json-pointer /items/*/g
--let $MRS_CLIENT_ARGS_OBJ=$MRS_CLIENT_ARGS --json-pointer /g

--echo
--echo #
--echo # I.1
--exec $MRS_CLIENT_ARGS_OBJ --path /svc/test/geo0/2

--echo
--echo #
--echo # I.2
--exec $MRS_CLIENT_ARGS_LIST --path /svc/test/geo0

--echo
--echo #
--echo # I.3
--let $mrs_client_arg_path='/svc/test/geo0/2'
--let $mrs_client_arg_payload='{"id":2,"g":{"type":"LineString","coordinates":[[100,0],[0,0]]}}'
--let $mrs_client_arg_request_type='PUT'
--source ../include/mrs/mrs_client.inc

--let $mrs_client_arg_path='/svc/test/geo0/2'
--let $mrs_client_arg_payload='{"id":2,"g":{"type":"Point", "coordinates":[100,0]}}'
--let $mrs_client_arg_request_type='PUT'
--source ../include/mrs/mrs_client.inc


#--echo
#--echo #
#--echo # I.4
#
#--let $mrs_client_arg_path='/svc/test/geo0/2'
#--let $mrs_client_arg_payload='{"id":2,"g":"POINT(0 0)"}'
#--let $mrs_client_arg_request_type='PUT'
#--source ../include/mrs/mrs_client.inc
#
#--let $mrs_client_arg_path='/svc/test/geo0/2'
#--let $mrs_client_arg_payload='{"id":2,"g":"POINT(100 0)"}'
#--let $mrs_client_arg_request_type='PUT'
#--source ../include/mrs/mrs_client.inc
#

--echo
--echo #
--echo # I.4
--let $mrs_client_arg_path='/svc/test/geo0/?q={"g":"POINT(100 0)"}'
--source ../include/mrs/mrs_client.inc

--let $mrs_client_arg_path='/svc/test/geo0/?q={"g":"POINT(0 0)"}'
--source ../include/mrs/mrs_client.inc


--echo
--echo #
--echo # I.5
--let $mrs_client_arg_path='/svc/test/geo0/?q={"g":{"type":"Point","coordinates":[0,0]}}'
--source ../include/mrs/mrs_client.inc

--let $mrs_client_arg_path='/svc/test/geo0/?q={"g":{"type":"Point","coordinates":[100,0]}}'
--source ../include/mrs/mrs_client.inc

###################################
--echo
--echo #
--echo # II.1
--exec $MRS_CLIENT_ARGS_OBJ --path /svc/test/geo4326/2

--echo
--echo #
--echo # II.2
--exec $MRS_CLIENT_ARGS_LIST --path /svc/test/geo4326

--echo
--echo #
--echo # II.3
--let $mrs_client_arg_path='/svc/test/geo4326/2'
--let $mrs_client_arg_payload='{"id":2,"g":{"type":"LineString","coordinates":[[80,0],[0,0]]}}'
--let $mrs_client_arg_request_type='PUT'
--source ../include/mrs/mrs_client.inc

--let $mrs_client_arg_path='/svc/test/geo4326/2'
--let $mrs_client_arg_request_type='PUT'
--let $mrs_client_arg_payload='{"id":2,"g":{"type":"Point", "coordinates":[80,0]}}'
--source ../include/mrs/mrs_client.inc

#--echo
#--echo #
#--echo # II.4
#
#--let $mrs_client_arg_path='/svc/test/geo4326/2'
#--let $mrs_client_arg_request_type='PUT'
#--let $mrs_client_arg_payload='{"id":2,"g":"POINT(0 0)"}'
#--source ../include/mrs/mrs_client.inc
#
#--let $mrs_client_arg_path='/svc/test/geo4326/2'
#--let $mrs_client_arg_request_type='PUT'
#--let $mrs_client_arg_payload='{"id":2,"g":"POINT(80 0)"}'
#--source ../include/mrs/mrs_client.inc


--echo
--echo #
--echo # II.4
--let $mrs_client_arg_path='/svc/test/geo4326/?q={"g":"POINT(80 0)"}'
--source ../include/mrs/mrs_client.inc


--let $mrs_client_arg_path='/svc/test/geo4326/?q={"g":"POINT(0 0)"}'
--source ../include/mrs/mrs_client.inc


--echo
--echo #
--echo # II.5
--let $mrs_client_arg_path='/svc/test/geo4326/?q={"g":{"type":"Point","coordinates":[0,0]}}'
--source ../include/mrs/mrs_client.inc

# coordinates are reversed in comparison to SRID 0.
# POINT(80 0) == "coordinates":[0, 80]
--let $mrs_client_arg_path='/svc/test/geo4326/?q={"g":{"type":"Point","coordinates":[0,80]}}'
--source ../include/mrs/mrs_client.inc


# Cleanup
DROP TABLE test.geo0;
DROP TABLE test.geo4326;
--source ../include/mrs/cleanup.inc
