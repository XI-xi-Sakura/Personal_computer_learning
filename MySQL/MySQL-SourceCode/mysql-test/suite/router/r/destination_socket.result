CREATE USER account_with_auth_socket@localhost IDENTIFIED WITH auth_socket AS '$USER';
# MySQL Rest Service schema created.
# MySQL Rest Service, server accounts configured.
CREATE SCHEMA `mrs`;
GRANT EXECUTE ON mrs.* TO account_with_auth_socket@localhost;
CREATE PROCEDURE `mrs`.`hello_proc` (IN name CHAR(20))
BEGIN
SELECT CONCAT('Hello ',name,'!') as result;
END;//
CREATE PROCEDURE `mrs`.`proc_do_nothing` ()
BEGIN
END;//

## creating object-definition
#
# ... add service /svc
# Registred SERVICE at path: /svc
# ... add schema 'mrs' as /proc to service /svc
# Registred DB_SCHEMA at path: /svc/proc
# ... add procedure 'proc_do_nothing' as /nothing to /svc/proc
# Registred DB_OBJECT at path: /svc/proc/nothing
# ... add procedure 'hello_proc' as /hello_proc to /svc/proc
# Registred DB_OBJECT at path: /svc/proc/hello_proc
GET /svc/proc/nothing
{
    "resultSets": []
}
OK

#
# Smoke test that everything works over unix-sockets.
GET /svc/proc/hello_proc?name=Andresz
{
    "resultSets": [
        {
            "type": "items0",
            "items": [
                {
                    "result": "Hello Andresz!"
                }
            ],
            "_metadata": {
                "columns": [
                    {
                        "name": "result",
                        "type": "VARCHAR(27)"
                    }
                ]
            }
        }
    ]
}
OK
DROP SCHEMA mrs;
DROP SCHEMA mysql_rest_service_metadata;
DROP ROLE mysql_rest_service_admin;
DROP ROLE mysql_rest_service_schema_admin;
DROP ROLE mysql_rest_service_meta_provider;
DROP ROLE mysql_rest_service_data_provider;
DROP ROLE mysql_rest_service_dev;
DROP USER account_with_auth_socket@localhost;
